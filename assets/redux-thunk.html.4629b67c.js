import{c as n}from"./app.49c6a941.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h2 id="\u1103\u1173\u11AF\u110B\u1165\u1100\u1161\u1106\u1167" tabindex="-1"><a class="header-anchor" href="#\u1103\u1173\u11AF\u110B\u1165\u1100\u1161\u1106\u1167" aria-hidden="true">#</a> \uB4E4\uC5B4\uAC00\uBA70</h2><p>Redux\uC5D0\uC11C\uB294 <code>dispatch</code> \uD568\uC218\uB97C \uC0AC\uC6A9\uD558\uC5EC, \uC2A4\uD1A0\uC5B4\uC758 \uC0C1\uD0DC\uAC12\uC744 \uBCC0\uACBD\uD558\uB294\uB370, API \uD638\uCD9C\uC744 \uD1B5\uD574 \uB370\uC774\uD130\uB97C \uBC1B\uC544\uC640\uC11C \uBE44\uB3D9\uAE30\uB85C \uCC98\uB9AC\uD574\uC57C \uD558\uB294 \uC0C1\uD669\uC774 \uC790\uC8FC \uBC1C\uC0DD\uD55C\uB2E4.</p><p>Redux\uC5D0\uC11C \uBE44\uB3D9\uAE30\uB97C \uCC98\uB9AC\uB97C \uC704\uD574 \uC8FC\uB85C <code>redux-thunk</code>, <code>redux-observable</code>, <code>redux-saga</code> \uB4F1\uC758 \uB77C\uC774\uBE0C\uB7EC\uB9AC\uB97C \uC0AC\uC6A9\uD55C\uB2E4. <code>redux-thunk</code>\uB294 \uAC00\uC7A5 \uAC04\uB2E8\uD558\uAC8C \uC2DC\uC791\uD560 \uC218 \uC788\uC73C\uBA70, \uC9C4\uC785 \uC7A5\uBCBD\uC774 \uB0AE\uC544 \uB9CE\uC740 \uD504\uB85C\uC81D\uD2B8\uC5D0\uC11C \uC0AC\uC6A9\uD55C\uB2E4.</p><h2 id="redux-thunk-\u1109\u1165\u11AF\u110E\u1175" tabindex="-1"><a class="header-anchor" href="#redux-thunk-\u1109\u1165\u11AF\u110E\u1175" aria-hidden="true">#</a> redux-thunk \uC124\uCE58</h2><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>npm install redux-thunk
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="redux-thunk-\u110B\u1161\u11AF\u110B\u1161\u1107\u1169\u1100\u1175" tabindex="-1"><a class="header-anchor" href="#redux-thunk-\u110B\u1161\u11AF\u110B\u1161\u1107\u1169\u1100\u1175" aria-hidden="true">#</a> redux-thunk \uC54C\uC544\uBCF4\uAE30</h2><p><code>redux-thunk</code>\uB294 API \uD638\uCD9C \uBC0F \uBD80\uC218 \uD6A8\uACFC\uB97C \uCC98\uB9AC\uD560 \uC218 \uC788\uB3C4\uB85D \uB3C4\uC640\uC8FC\uBA70, \uBCF5\uC7A1\uD55C \uD568\uC218\uB97C \uC791\uC131\uD560 \uC218 \uC788\uB2E4. \uAE30\uC874 <code>dispatch</code> \uD568\uC218\uB294 \uC561\uC158 \uAC1D\uCCB4\uB97C \uCC98\uB9AC\uD558\uB294\uB370 \uC0AC\uC6A9\uD588\uB294\uB370, <code>redux-thunk</code>\uB97C \uBBF8\uB4E4\uC6E8\uC5B4\uC5D0 \uB4F1\uB85D\uD558\uBA74 \uD568\uC218\uB3C4 \uCC98\uB9AC\uD560 \uC218 \uC788\uB2E4.</p><p><code>redux-thunk</code>\uB294 \uAC04\uB2E8\uD55C \uAD6C\uC870\uB85C \uB418\uC5B4\uC788\uC73C\uBA70, \uD568\uC218\uAC00 \uB4E4\uC5B4\uC62C \uACBD\uC6B0 <code>dispatch</code>\uC640 <code>getState</code>\uB97C \uB118\uACA8\uC11C \uC2E4\uD589\uD55C\uB2E4.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">thunk</span> <span class="token operator">=</span>
  <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> dispatch<span class="token punctuation">,</span> getState <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token punctuation">(</span><span class="token parameter">next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token punctuation">(</span><span class="token parameter">action</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> action <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">action</span><span class="token punctuation">(</span>dispatch<span class="token punctuation">,</span> getState<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token function">next</span><span class="token punctuation">(</span>action<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p><code>dispatch</code>\uB85C \uD568\uC218\uB97C \uCC98\uB9AC\uD558\uB294 \uBC29\uBC95\uC740 \uB2E4\uC74C\uACFC \uAC19\uB2E4.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">fetchItems</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">dispatch<span class="token punctuation">,</span> getState</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>
<span class="token punctuation">}</span>

<span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token function">fetchItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><code>redux-thunk</code>\uB97C \uC0AC\uC6A9\uD558\uAE30 \uC704\uD574\uC11C\uB294 <code>createStore</code> \uD568\uC218\uB97C \uD1B5\uD574 \uC2A4\uD1A0\uC5B4\uB97C \uC0DD\uC131\uD560 \uB54C, \uBBF8\uB4E4\uC6E8\uC5B4\uB97C \uB4F1\uB85D\uD558\uB294 \uBC29\uBC95\uACFC \uB3D9\uC77C\uD558\uAC8C \uB4F1\uB85D\uD574\uC57C \uD55C\uB2E4.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createStore<span class="token punctuation">,</span> applyMiddleware <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;redux&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> thunk <span class="token keyword">from</span> <span class="token string">&quot;redux-thunk&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> rootReducer <span class="token keyword">from</span> <span class="token string">&quot;../reducers&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">createStore</span><span class="token punctuation">(</span>rootReducer<span class="token punctuation">,</span> <span class="token function">applyMiddleware</span><span class="token punctuation">(</span>thunk<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>Provider store<span class="token operator">=</span><span class="token punctuation">{</span>store<span class="token punctuation">}</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>App <span class="token operator">/</span><span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>Provider<span class="token operator">&gt;</span><span class="token punctuation">,</span>
  document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;root&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="redux-thunk-\u1109\u1161\u110B\u116D\u11BC\u1112\u1161\u1100\u1175" tabindex="-1"><a class="header-anchor" href="#redux-thunk-\u1109\u1161\u110B\u116D\u11BC\u1112\u1161\u1100\u1175" aria-hidden="true">#</a> redux-thunk \uC0AC\uC6A9\uD558\uAE30</h2><p>API\uB97C \uD638\uCD9C\uD574\uC11C \uC720\uC800 \uB9AC\uC2A4\uD2B8\uB97C \uBC1B\uC544\uC624\uB294 \uCF54\uB4DC\uB97C \uD1B5\uD574 <code>redux-thunk</code>\uB97C \uC0AC\uC6A9\uD558\uB294 \uBC29\uBC95\uC5D0 \uB300\uD574 \uC54C\uC544\uBCF4\uC790.</p><h3 id="constants-actiontypes-js" tabindex="-1"><a class="header-anchor" href="#constants-actiontypes-js" aria-hidden="true">#</a> constants/ActionTypes.js</h3><p>\uBA3C\uC800 \uC561\uC158 \uD0C0\uC785\uB4E4\uC744 \uB2E4\uB978 \uACF3\uC5D0\uC11C \uC0AC\uC6A9\uD560 \uC218 \uC788\uB3C4\uB85D \uC815\uC758\uD55C\uB2E4.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \uC720\uC800 \uB9AC\uC2A4\uD2B8 \uC694\uCCAD \uC2DC\uC791</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">FETCH_USER_LIST</span> <span class="token operator">=</span> <span class="token string">&quot;FETCH_USER_LIST&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// \uC720\uC800 \uB9AC\uC2A4\uD2B8 \uC694\uCCAD \uC131\uACF5</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">FETCH_USER_LIST_SUCCESS</span> <span class="token operator">=</span> <span class="token string">&quot;FETCH_USER_LIST_SUCCESS&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// \uC720\uC800 \uB9AC\uC2A4\uD2B8 \uC694\uCCAD \uC2E4\uD328</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">FETCH_USER_LIST_ERROR</span> <span class="token operator">=</span> <span class="token string">&quot;FETCH_USER_LIST_ERROR&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="reducer-user-js" tabindex="-1"><a class="header-anchor" href="#reducer-user-js" aria-hidden="true">#</a> reducer/user.js</h3><p>\uADF8\uB9AC\uACE0 \uC815\uC758\uD55C \uC561\uC158 \uD0C0\uC785\uC744 \uC0AC\uC6A9\uD574\uC11C, \uB9AC\uB4C0\uC11C\uB85C \uC5B4\uB5BB\uAC8C \uCC98\uB9AC\uD560\uC9C0 \uC815\uC758\uD55C\uB2E4.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> initialState <span class="token operator">=</span> <span class="token punctuation">{</span>
  loading<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  items<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  error<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">users</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">state <span class="token operator">=</span> initialState<span class="token punctuation">,</span> action</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>action<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token constant">FETCH_USER_LIST</span><span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token operator">...</span>state<span class="token punctuation">,</span> loading<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token constant">FETCH_USER_LIST_SUCCESS</span><span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token operator">...</span>state<span class="token punctuation">,</span> loading<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> items<span class="token operator">:</span> action<span class="token punctuation">.</span>payload <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token constant">FETCH_USER_LIST_ERROR</span><span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token operator">...</span>state<span class="token punctuation">,</span> loading<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> error<span class="token operator">:</span> action<span class="token punctuation">.</span>payload <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">default</span><span class="token operator">:</span>
      <span class="token keyword">return</span> state<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h3 id="actions-user-js" tabindex="-1"><a class="header-anchor" href="#actions-user-js" aria-hidden="true">#</a> actions/user.js</h3><p><code>fetchUsers</code>\uB294 \uC720\uC800 \uB9AC\uC2A4\uD2B8\uB97C \uAC00\uC9C0\uACE0 \uC624\uB294 \uD568\uC218\uB85C \uCEF4\uD3EC\uB10C\uD2B8\uC5D0\uC11C <code>dispatch</code> \uD560 \uB54C \uC0AC\uC6A9\uD55C\uB2E4. \uD568\uC218\uAC00 \uD638\uCD9C\uB418\uBA74 \uC694\uCCAD\uC774 \uC2DC\uC791\uB418\uC5C8\uB2E4\uB294 \uAC83\uC744 \uC54C\uAE30 \uC704\uD574\uC11C <code>dispatch</code>\uB97C \uD638\uCD9C\uD55C\uB2E4. \uADF8\uB9AC\uACE0 API \uC751\uB2F5 \uC0C1\uD0DC\uC5D0 \uB9DE\uAC8C \uD0C0\uC785\uC744 \uB118\uACA8\uC11C <code>dispatch</code>\uB97C \uD638\uCD9C\uD55C\uB2E4.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">fetchUsers</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">dispatch</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \uC720\uC800 \uB9AC\uC2A4\uD2B8 \uC694\uCCAD \uC2DC\uC791</span>
  <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token constant">FETCH_USER_LIST</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token comment">// API \uD638\uCD9C</span>
    <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">API</span><span class="token punctuation">.</span><span class="token function">getUsers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \uC720\uC800 \uB9AC\uC2A4\uD2B8 \uC694\uCCAD \uC131\uACF5</span>
    <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      type<span class="token operator">:</span> <span class="token constant">FETCH_USER_LIST_SUCCESS</span><span class="token punctuation">,</span> 
      payload<span class="token operator">:</span> response<span class="token punctuation">.</span>data<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \uC720\uC800 \uB9AC\uC2A4\uD2B8 \uC694\uCCAD \uC2E4\uD328</span>
    <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token constant">FETCH_USER_LIST_ERROR</span><span class="token punctuation">,</span> payload<span class="token operator">:</span> e <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h3 id="components-userlist-js" tabindex="-1"><a class="header-anchor" href="#components-userlist-js" aria-hidden="true">#</a> components/UserList.js</h3><p>\uCEF4\uD3EC\uB10C\uD2B8\uC5D0\uC11C\uB294 \uC55E\uC11C \uB9CC\uB4E4\uC5B4\uB450\uC5C8\uB358 <code>fetchUsers</code> \uD568\uC218\uB97C <code>dispatch</code>\uD558\uACE0, <code>useSelector</code>\uB97C \uD1B5\uD574\uC11C \uC0C1\uD0DC\uAC12\uC744 \uAC00\uC9C0\uACE0 \uC628 \uC774\uD6C4\uC5D0 \uC0AC\uC6A9\uD558\uBA74 \uB41C\uB2E4.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">UserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> dispatch <span class="token operator">=</span> <span class="token function">useDispatch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token punctuation">{</span>
    loading<span class="token punctuation">,</span>
    items<span class="token operator">:</span> users<span class="token punctuation">,</span>
    error<span class="token punctuation">,</span>
  <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useSelector</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> state<span class="token punctuation">.</span>users<span class="token punctuation">,</span> shallowEqual<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token function">fetchUsers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>dispatch<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>h2<span class="token operator">&gt;</span>User List<span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">&gt;</span>
      <span class="token operator">...</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div>`,27);function t(e,o){return p}var u=s(a,[["render",t]]);export{u as default};
